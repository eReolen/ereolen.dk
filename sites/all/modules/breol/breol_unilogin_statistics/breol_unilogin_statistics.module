<?php

/**
 * @file
 * Keep statistics of loans by Unilogin users.
 */

/**
 * Implements hook_menu().
 */
function breol_unilogin_statistics_menu() {
  $items = array();

  $items['admin/reports/breol_unilogin_statistics'] = array(
    'title' => 'UNI•Login user loan statistics',
    'description' => 'Statistics of loans by UNI•Login users',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('breol_unilogin_statistics_form'),
    'access arguments' => array('access unilogin loan statistics'),
    'file' => 'breol_unilogin_statistics.page.inc',
  );

  $items['admin/reports/breol_statistics'] = array(
    'title' => 'User loan statistics',
    'description' => 'Statistics of loans by non-UNI•Login users',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('breol_unilogin_statistics_other_form'),
    'access arguments' => array('access unilogin loan statistics'),
    'file' => 'breol_unilogin_statistics.page.inc',
  );

  $items['admin/reports/breol_unilogin_statistics/%/%'] = array(
    'title' => 'UNI•Login user loan statistics data',
    'page callback' => 'breol_unilogin_statistics_data',
    'page arguments' => array(3, 4),
    'access arguments' => array('access unilogin loan statistics'),
    'file' => 'breol_unilogin_statistics.page.inc',
  );

  $items['admin/reports/breol_statistics/%/%'] = array(
    'title' => 'non-UNI•Login user loan statistics data',
    'page callback' => 'breol_unilogin_statistics_data_other',
    'page arguments' => array(3, 4),
    'access arguments' => array('access unilogin loan statistics'),
    'file' => 'breol_unilogin_statistics.page.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function breol_unilogin_statistics_permission() {
  return array(
    'access unilogin loan statistics' => array(
      'title' => t('Access UNI•Login loan statistics'),
      'description' => t('Allow role to see the loan statistics for UNI•Login.'),
    ),
  );
}

/**
 * Implements hook_publizon_loan().
 */
function breol_unilogin_statistics_publizon_loan($account, $name, $isbn, $retailer_id) {
  if (ding_unilogin_authenticated($account)) {
    $data = array(
      'timestamp' => REQUEST_TIME,
      'retailer_id' => $retailer_id,
      'class' => '',
      'school_id' => '',
      'school' => '',
      'municipality_id' => '',
      'municipality' => '',
      'isbn' => $isbn,
    );
    try {
      $service = ding_unilogin_wservice('info');
      $person = $service->getPerson($name);
      if (!$person) {
        watchdog(
          'breol_unilogin_statistics',
          'Cannot log loan for %user, cannot get person.',
          array('%user' => $name),
          WATCHDOG_ERROR
        );
      }

      $inst = $service->getInstitution($person->Instnr);
      if (!$inst) {
        watchdog(
          'breol_unilogin_statistics',
          'Cannot log loan for %user, cannot get institution id %institution_id.',
          array('%user' => $name, '%institution_id' => $person->Instnr),
          WATCHDOG_ERROR
        );
      }
      else {
        $data['school_id'] = $inst->Instnr;
        $data['school'] = $inst->Navn;
        $data['municipality_id'] = $inst->Kommunenr;
        $data['municipality'] = $inst->Kommune;
      }

      $student = $service->getStudent($person->Instnr, $person->Brugerid);
      if (!$student) {
        watchdog(
          'breol_unilogin_statistics',
          'Cannot log loan for %user, cannot get student record for user id %user_id at institution id %institution_id.',
          array(
            '%user' => $name,
            '%user_id' => $person->Brugerid,
            '%institution_id' => $person->Instnr,
          ),
          WATCHDOG_ERROR
        );
      }
      else {
        $data['class'] = $student->Klasse;
      }
    }
    catch (Exception $e) {
      // Quietly ignore.
    }

    db_insert('breol_unilogin_statistics')
      ->fields($data)
      ->execute();
  }
}
